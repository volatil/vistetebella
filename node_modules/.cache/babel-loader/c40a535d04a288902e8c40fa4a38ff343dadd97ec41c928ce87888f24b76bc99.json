{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elPaulo\\\\Proyectos\\\\vistetebella\\\\src\\\\components\\\\Detalle\\\\Detalle.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { DB, COMETA } from \"../CONST\";\nimport \"./Detalle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Detalle() {\n  _s();\n  let lugar = useLocation().pathname.split(\"detalle/\")[1];\n  lugar = lugar.replaceAll(\"%20\", \" \").replaceAll(\"%C3\", \"\").replaceAll(\"%B3\", \"o\").replaceAll(\"%A9\", \"e\");\n  console.log(lugar);\n  console.log(lugar.slice(0, 50));\n  const [detalle, setDetalle] = useState();\n  useEffect(() => {\n    fetch(DB).then(x => x.json()).then(x => {\n      for (let count = 1; count <= x.values.length - 1; count++) {\n        if (x.values[count][1].includes(lugar.slice(0, 20))) {\n          console.log(`MATCH!`);\n          const resumen = x.values[count];\n          const p = {\n            id: resumen[0],\n            nombre: resumen[1].replaceAll(\"SHEIN \", \"\"),\n            precio: (Number(resumen[2]) + COMETA).toLocaleString(\"es-CL\"),\n            fechaentrega: resumen[3],\n            imagen: resumen[4].split(\",//\")[0]\n          };\n        } else {\n          console.log(\"NO\");\n        }\n      }\n      // const resumen = x.values[lugar];\n      // const todo = [];\n      // const p = {\n      // \tid: resumen[0],\n      // \tnombre: resumen[1].replaceAll(\"SHEIN \", \"\"),\n      // \tprecio: (Number(resumen[2])+COMETA).toLocaleString(\"es-CL\"),\n      // \tfechaentrega: resumen[3],\n      // \timagen: resumen[4].split(\",//\")[0],\n      // };\n\n      // todo.push({ id: p.id, nombre: p.nombre, precio: p.precio, fechaentrega: p.fechaentrega, imagen: p.imagen });\n      // setDetalle( todo );\n    });\n  }, [lugar]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: detalle === null || detalle === void 0 ? void 0 : detalle.map(resp => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        id: \"detalle\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: resp.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: resp.imagen,\n          alt: resp.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"precio\",\n          children: [\"$ \", resp.precio]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this)]\n      }, resp.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(Detalle, \"THA7ydh2BgJaQ0D/Ku/rtFaINBI=\", false, function () {\n  return [useLocation];\n});\n_c = Detalle;\nexport default Detalle;\nvar _c;\n$RefreshReg$(_c, \"Detalle\");","map":{"version":3,"names":["useEffect","useState","useLocation","DB","COMETA","Detalle","lugar","pathname","split","replaceAll","console","log","slice","detalle","setDetalle","fetch","then","x","json","count","values","length","includes","resumen","p","id","nombre","precio","Number","toLocaleString","fechaentrega","imagen","map","resp"],"sources":["C:/Users/elPaulo/Proyectos/vistetebella/src/components/Detalle/Detalle.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { DB, COMETA } from \"../CONST\";\r\n\r\nimport \"./Detalle.css\";\r\n\r\nfunction Detalle() {\r\n\tlet lugar = useLocation().pathname.split(\"detalle/\")[1];\r\n\tlugar = lugar.replaceAll(\"%20\", \" \").replaceAll(\"%C3\", \"\").replaceAll(\"%B3\", \"o\").replaceAll(\"%A9\", \"e\");\r\n\tconsole.log( lugar );\r\n\tconsole.log( lugar.slice(0,50) );\r\n\tconst [detalle, setDetalle] = useState();\r\n\t\r\n\tuseEffect(() => {\r\n\t\tfetch( DB ).then( x => x.json() ).then( x => {\r\n\t\t\tfor ( let count = 1; count <= x.values.length-1; count++ ) {\r\n\t\t\t\tif ( x.values[count][1].includes( lugar.slice(0,20) ) ) {\r\n\t\t\t\t\tconsole.log( `MATCH!` );\r\n\t\t\t\t\tconst resumen = x.values[count];\r\n\t\t\t\t\tconst p = {\r\n\t\t\t\t\t\tid: resumen[0],\r\n\t\t\t\t\t\tnombre: resumen[1].replaceAll(\"SHEIN \", \"\"),\r\n\t\t\t\t\t\tprecio: (Number(resumen[2])+COMETA).toLocaleString(\"es-CL\"),\r\n\t\t\t\t\t\tfechaentrega: resumen[3],\r\n\t\t\t\t\t\timagen: resumen[4].split(\",//\")[0],\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"NO\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// const resumen = x.values[lugar];\r\n\t\t\t// const todo = [];\r\n\t\t\t// const p = {\r\n\t\t\t// \tid: resumen[0],\r\n\t\t\t// \tnombre: resumen[1].replaceAll(\"SHEIN \", \"\"),\r\n\t\t\t// \tprecio: (Number(resumen[2])+COMETA).toLocaleString(\"es-CL\"),\r\n\t\t\t// \tfechaentrega: resumen[3],\r\n\t\t\t// \timagen: resumen[4].split(\",//\")[0],\r\n\t\t\t// };\r\n\t\t\t\r\n\t\t\t// todo.push({ id: p.id, nombre: p.nombre, precio: p.precio, fechaentrega: p.fechaentrega, imagen: p.imagen });\r\n\t\t\t// setDetalle( todo );\r\n\t\t});\r\n\t},[lugar]);\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t{\r\n\t\t\tdetalle?.map((resp) => {\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<section key={resp.id} id=\"detalle\">\r\n\t\t\t\t\t\t<h2>{resp.nombre}</h2>\r\n\t\t\t\t\t\t<img src={resp.imagen} alt={resp.nombre} />\r\n\t\t\t\t\t\t<p className=\"precio\">$ {resp.precio}</p>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Detalle;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}